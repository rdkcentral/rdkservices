{
    "$schema": "https://raw.githubusercontent.com/rdkcentral/rdkservices/main/Tools/json_generator/schemas/interface.schema.json",
    "jsonrpc": "2.0",
    "info": {
        "title": "Bluetooth API", 
        "class": "Bluetooth",
        "description": "First version of the Bluetooth Thunder API."
    },
    "common": {
        "$ref": "../common/common.json"
    },
    "definitions": {
        "deviceID":{
            "summary":"ID that is derived from the Bluetooth MAC address. 6 byte MAC value is packed into 8 byte with leading zeros for first 2 bytes",
            "type":"string",
            "example":"61579454946360"
        },
        "name": {
            "summary":"Name of the Bluetooth Device.",
            "type":"string",
            "example":"[TV] UE32J5530"
        },
        "name_p": {
            "summary":"Name of the Bluetooth Adapter",
            "type":"string",
            "example":"bluetooth"
        },
        "power": {
            "summary":"The power status.",
            "enum": [
                "ON",
                "OFF"
            ],
            "type":"string",
            "example":"ON"
        },
        "deviceType": {
            "summary":"Device class (for example: `headset`, `speakers`, etc.)",
            "type":"string",
            "example":"TV"
        },
        "connected": {
            "summary":"Whether the device is connected",
            "type":"boolean",
            "example":true
        },
        "supportedProfile":{
            "summary":"Bluetooth profile supported by the device",
            "type":"string",
            "example":"SMARTPHONE"
        },
        "manufacturer": {
            "summary":"Manufacturer of the device",
            "type":"string",
            "example":"640"
        },
        "MAC": {
            "summary":"MAC address of the device",
            "type":"string",
            "example":"E8:FB:E9:0C:XX:80"
        },
        "rawDeviceType": {
            "summary": "Bluetooth device class",
            "type": "string",
            "example": "2360344"
        },
        "rawBleDeviceType": {
            "summary": "Bluetooth device appearance",
            "type": "string",
            "example": "180"
        },
        "lastConnectedState": {
            "summary": "Whether the device was last to connect. Only the last connected device has a value of `true`.",
            "type": "boolean",
            "example": true
        },
        "album": {
            "summary":"Name of the album",
            "type":"string",
            "example": "Spacebound Apes"
            },
        "genre": {
            "summary":"Genre of the album",
            "type":"string",
            "example": "Jazz" 
        },
        "title": {
            "summary":"Title of the track",
            "type":"string",
            "example":"Grace"
        },
        "artist": {
            "summary":"name of the artist",
            "type":"string",
            "example":"Neil Cowley Trio"
        },
        "ui32Duration": {
            "summary":"Duration of the track in milliseconds",
            "type":"string",
            "example":"217292"
        },
        "ui32TrackNumber": {
            "summary":"Currently playing track",
            "type":"string",
            "example":"1"
        },
        "ui32NumberOfTracks": {
            "summary":"Number of total tracks",
            "type":"string",
            "example":"10"
        },
        "position":{
            "summary": "Current track's position in milliseconds",
            "type": "string",
            "example": "217000"
        },
        "Duration":{
            "summary": "Current track's duration in milliseconds",
            "type": "string",
            "example": "217292"
        },
        "newStatus": {
            "summary": "Bluetooth status on the device",
            "type": "string",
            "example": "DISCOVERY_COMPLETED"
        },
        "discoverable":{
            "summary":"Whether the device is discoverable",
            "type":"boolean",
            "example":true
        },
        
        "paired": {
            "summary":"Whether paired or not",
            "type":"boolean",
            "example":true
        },
        "connectedProfile":{
            "summary": "Profile of the connected device. See [startscan](#method.startscan) for supported profiles.",
            "type":"string",
            "example": "SMARTPHONE"
        },
        "activeState":{
            "summary":"for devices that support low power mode this parameter indicates if the device is in `STANDBY` mode (`0`), `LOW_POWER` mode (`1`), or `ACTIVE` mode (`2`).",
            "type":"string",
            "example":"0"
        },
        "rssi": {
            "summary":"Received signal strength of the device",
            "type":"string",
            "example":"0"
        },
        "signalStrength": {
            "summary":"Bluetooth signal strength",
            "type":"string",
            "example":"0"
        },
        "batteryLevel": {
            "summary":"Battery level of the connected bluetooth device, 0 if no battery level found",
            "type":"string",
            "example": "53"
        },
        "modalias": {
            "summary":"The modalias for the device - if no modalias is present it will be an empty string",
            "type":"string",
            "example": "v:0B13p:045Ed:0517"
        },
        "firmwareRevision": {
            "summary":"The firmware revision for a particular device creaded from the modalias - if no modalias is present it will be an empty string",
            "type":"string",
            "example": "5.1.7"
        },
        "eventType":{
            "summary": "Name of a request-time event (for example, `onPairingRequest`, `onConnectionRequest`, `onPlaybackRequest`)",
            "type":"string",
            "example": "onPairingRequest"
        },
        "responseValue":{
            "summary":"one of `ACCEPTED` or `REJECTED`",
            "type":"string",
            "example":"ACCEPTED"
        },
        "command":{
            "summary": "Command to send to the connected source.",
            "type":"string",
            "example": "PLAY"
        },
        "audioStreamName":{
            "summary":"The audio out to set. Either `PRIMARY` or `AUXILIARY`",
            "type":"string",
            "example":"PRIMARY"
        },
        "timeout":{
            "summary": "Discoverable window timeout",
            "type": "integer",
            "example": 5
         },
         "profile":{
            "summary":"List of Profiles to scan.",
            "type":"string",
            "example":"SMARTPHONE, HEADSET"
        },
        "status": {
            "summary": "Discovery status.",
            "type":"string",
            "example":"AVAIlABLE"
        },
        "deviceProfile":{
            "summary": "Profile of the Bluetooth device",
            "type": "string",
            "example":"SMARTPHONE"
        },
        "version":{
            "summary":"API Version Number",
            "type":"integer",
            "example": 1
        },
        "discoveryType":{
            "summary": "either `DISCOVERED` or `LOST`",
            "type": "string",
            "example":"DISCOVERED"
        },
        "pinRequired": {
            "summary": "Whether a pin is required to complete pairing. If `true`, the pin is displayed on the TV screen.",
            "type": "boolean",
            "example": true
        },
        "pinValue": {
            "summary": "Pin that is used for paring",
            "type": "string",
            "example": "0601"
        },
        "action": {
            "summary": "Current playback state. Either `started`, `paused`, `stopped` or `ended`. If the state is `ended`, then `position` and `Duration` are omitted.",
            "type": "string",
            "example": "started"
        },
        "volume": {
            "summary": "Volume value is in between 0 and 255",
            "type": "string",
            "example":"50"
        },
        "mute": {
            "summary":"Mute value of the device is either true or false",
            "type": "boolean",
            "example": false
        }
    },
    "methods": {
        "connect":{
            "summary": "Initiates the connection with the given Bluetooth device. Triggers `onStatusChanged` event.",
            "events":{
                "onStatusChanged" : "Triggers `onStatusChanged` event once it is  connected to the given deviceID."
            },
            "params": {
                "type":"object",
                "properties": {
                    "deviceID": {
                        "$ref": "#/definitions/deviceID"
                    },
                    "deviceType":{
                        "$ref": "#/definitions/deviceType"
                    },
                    "connectedProfile":{
                        "$ref": "#/definitions/connectedProfile"
                    }
                },
                "required": [
                    "deviceID",
                    "deviceType",
                    "connectedProfile"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "disable":{
            "summary": "Disables the Bluetooth stack.",
            "result": {
                "$ref": "#/common/result"
            }
        },
        "disconnect":{
            "summary": "Disconnects the given device from this device ID and triggers `onStatusChanged` Event.",
            "events": {
                "onStatusChanged" : "Triggers `onStatusChanged` event once it is disconnected from given deviceID."
            },
            "params": {
                "type":"object",
                "properties": {
                    "deviceID": {
                        "$ref": "#/definitions/deviceID"
                    },
                    "deviceType": {
                        "$ref": "#/definitions/deviceType"
                    }
                },
                "required": [
                    "deviceID",
                    "deviceType"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "enable":{
            "summary": "Enables the Bluetooth stack.",
            "result": {
                "$ref": "#/common/result"
            }
        },
        "getAudioInfo":{
            "summary": "Provides information on the currently playing song/audio from an external source. The returned information from Bluetooth-In device provides information that could be displayed on a TV screen.",
            "params": {
                "type":"object",
                "properties": {
                    "deviceID": {
                        "$ref": "#/definitions/deviceID"
                    }
                },
                "required": [
                    "deviceID"
                ]
            },
            "result": {
                "type":"object",
                "properties": {
                    "trackInfo": {
                        "summary": "An object that contains information about the currently playing audio selection.",
                        "type":"object",
                        "properties": {
                            "album": {
                                "$ref": "#/definitions/album"
                            },
                            "genre": {
                                "$ref": "#/definitions/genre" 
                            },
                            "title": {
                                "$ref": "#/definitions/title"
                            },
                            "artist": {
                                "$ref": "#/definitions/artist"
                            },
                            "ui32Duration": {
                                "$ref": "#/definitions/ui32Duration"
                            },
                            "ui32TrackNumber": {
                                "$ref": "#/definitions/ui32TrackNumber"
                            },
                            "ui32NumberOfTracks": {
                                "$ref": "#/definitions/ui32NumberOfTracks"
                            }
                        },
                        "required": [
                            "album",
                            "genre",
                            "title",
                            "artist",
                            "ui32Duration",
                            "ui32TrackNumber",
                            "ui32NumberOfTracks"
                        ]
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "trackInfo",
                    "success"
                ]
            }
        },
        "getConnectedDevices":{
            "summary": "Returns a list of devices connected to this device.",
            "result": {
                "type":"object",
                "properties": {
                    "connectedDevices": {
                        "summary": "An array of objects where each object represents a connected device",
                        "type":"array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "deviceID": {
                                    "$ref": "#/definitions/deviceID"
                                },
                                "name": {
                                    "$ref": "#/definitions/name" 
                                },
                                "deviceType": {
                                    "$ref": "#/definitions/deviceType"
                                },
                                "activeState":{
                                    "$ref": "#/definitions/activeState"
                                },
                                "rawDeviceType": {
                                    "$ref": "#/definitions/rawDeviceType"
                                },
                                "rawBleDeviceType": {
                                    "$ref": "#/definitions/rawBleDeviceType"
                                }
                            },
                            "required": [
                                "deviceID",
                                "name",
                                "deviceType",
                                "activeState",
                                "rawDeviceType",
                                "rawBleDeviceType"
                            ]
                        }
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "connectedDevices",
                    "success"
                ]
            }
        },
        "getDeviceInfo":{
            "summary": "Returns information for the given device ID.",
            "params": {
                "type":"object",
                "properties": {
                    "deviceID": {
                        "$ref": "#/definitions/deviceID"
                    }
                },
                "required": [
                    "deviceID"
                ]
            },
            "result": {
                "type":"object",
                "properties": {
                    "deviceInfo": {
                        "summary": "An object that contains information about the device",
                        "type":"object",
                        "properties": {
                            "deviceID": {
                                "$ref": "#/definitions/deviceID"
                                },
                            "name": {
                                "$ref": "#/definitions/name" 
                            },
                            "deviceType": {
                                "$ref": "#/definitions/deviceType"
                            },
                            "supportedProfile":{
                                "$ref": "#/definitions/supportedProfile"
                            },
                            "manufacturer": {
                                "$ref": "#/definitions/manufacturer"
                            },
                            "MAC": {
                                "$ref": "#/definitions/MAC"
                            },
                            "rssi": {
                                "$ref": "#/definitions/rssi" 
                            },
                            "signalStrength": {
                                "$ref": "#/definitions/signalStrength"
                            },
                            "batteryLevel": {
                                "$ref": "#/definitions/batteryLevel"
                            },
                            "modalias": {
                                "$ref": "#/definitions/modalias"
                            },
                            "firmwareRevision": {
                                "$ref": "#/definitions/firmwareRevision"
                            }
                        },
                        "required": [
                            "deviceID",
                            "name",
                            "deviceType",
                            "supportedProfile",
                            "manufacturer",
                            "MAC",
                            "rssi",
                            "signalStrength"
                        ]
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "deviceInfo",
                    "success"
                ]
            }
        },
        "getDiscoveredDevices":{
            "summary": "This method should be called after getting at least one event `onDiscoveredDevice` event and it returns an array of discovered devices.",
            "result": {
                "type":"object",
                "properties": {
                    "discoveredDevices": {
                        "summary": "An array of objects where each object represents a discovered device",
                        "type":"array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "deviceID": {
                                    "$ref": "#/definitions/deviceID"
                                },
                                "name": {
                                    "$ref": "#/definitions/name" 
                                },
                                "deviceType": {
                                    "$ref": "#/definitions/deviceType"
                                },
                                "connected":{
                                    "$ref": "#/definitions/connected"
                                },
                                "paired":{
                                    "$ref": "#/definitions/paired"
                                }, 
                                "rawDeviceType": {
                                    "$ref": "#/definitions/rawDeviceType"
                                },
                                "rawBleDeviceType": {
                                    "$ref": "#/definitions/rawBleDeviceType"
                                }
                            },
                            "required": [
                                "deviceID",
                                "name",
                                "deviceType",
                                "connected",
                                "paired",
                                "rawDeviceType",
                                "rawBleDeviceType"
                            ]
                        }
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "discoveredDevices",
                    "success"
                ]
            }
        },
        "getName":{
            "summary": "Returns the name of this device as seen by other Bluetooth devices.",
            "result": {
                "type":"object",
                "properties": {
                    "name": {
                        "summary": "The name of the device",
                        "type":"string",
                        "example":"RDK Bluetooth Device"
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "name",
                    "success"
                ]
            }
        },
        "getPairedDevices":{
            "summary": "Returns a list of devices that have paired with this device.",
            "result": {
                "type":"object",
                "properties": {
                    "pairedDevices": {
                        "summary": "An array of objects where each object represents a paired device",
                        "type":"array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "deviceID": {
                                    "$ref": "#/definitions/deviceID"
                                },
                                "name": {
                                    "$ref": "#/definitions/name" 
                                },
                                "deviceType": {
                                    "$ref": "#/definitions/deviceType"
                                },
                                "connected":{
                                    "summary": "Whether the device is connected",
                                    "type": "boolean",
                                    "example": "true"
                                }, 
                                "rawDeviceType": {
                                    "$ref": "#/definitions/rawDeviceType"
                                },
                                "rawBleDeviceType": {
                                    "$ref": "#/definitions/rawBleDeviceType"
                                }
                            },
                            "required": [
                                "deviceID",
                                "name",
                                "deviceType",
                                "connected",
                                "rawDeviceType",
                                "rawBleDeviceType"
                            ]
                        }
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "pairedDevices",
                    "success"
                ]
            }
        },
        "isDiscoverable":{
            "summary": "Returns `true`, if this device can be discovered by other Bluetooth devices.",
            "result": {
                "type":"object",
                "properties": {
                    "discoverable": {
                        "$ref": "#/definitions/discoverable"
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "discoverable",
                    "success"
                ]
            }
        },
        "pair":{
            "summary": "Pairs this device with device ID of Bluetooth. Triggers `onStatusChanged` and `onRequestFailed` events.",
            "events":{
                "onStatusChanged" : "Triggers onStatusChanged event when the device gets paired to given device ID.",
                "onRequestFailed" : "Triggers onRequestFailed event, when the device is unable to pair (BluetoothState: PAIRING_FAILED)"
            },
            "params": {
                "type":"object",
                "properties": {
                    "deviceID": {
                        "$ref": "#/definitions/deviceID"
                    }
                },
                "required": [
                    "deviceID"
                ]
            },
            "result": {
                "type":"object",
                "properties": {
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "success"
                ]
            }
        },
        "respondToEvent":{
            "summary": "Provides the ability to respond the client Bluetooth event. For example, this device can respond to a pairing or connection event and indicate the proper response to the requested device, such as the connection request accepted.",
            "params": {
                "type":"object",
                "properties": {
                    "deviceID": {
                        "$ref": "#/definitions/deviceID"
                    },
                    "eventType":{
                        "$ref": "#/definitions/eventType"
                    },
                    "responseValue":{
                        "$ref": "#/definitions/responseValue"
                    }
                },
                "required": [
                    "deviceID",
                    "eventType",
                    "responseValue"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "sendAudioPlaybackCommand":{
            "summary": "Provides control over the connected source. Requests can have one of the following values: PLAY, PAUSE, RESUME, STOP, SKIP_NEXT, SKIP_PREV, RESTART, MUTE, UNMUTE, VOLUME_UP, VOLUME_DOWN.",
            "params": {
                "type":"object",
                "properties": {
                    "deviceID": {
                        "$ref": "#/definitions/deviceID"
                    },
                    "command":{
                        "$ref": "#/definitions/command"
                    }
                },
                "required": [
                    "deviceID",
                    "command"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "setAudioStream":{
            "summary": "Sets the primary or secondary audio-out to the given Bluetooth device.",
            "params": {
                "type":"object",
                "properties": {
                    "deviceID": {
                        "$ref": "#/definitions/deviceID"
                    },
                    "audioStreamName":{
                        "$ref": "#/definitions/audioStreamName"
                    }
                },
                "required": [
                    "deviceID",
                    "audioStreamName"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "setDiscoverable":{
            "summary": "When true, this device can be discovered by other Bluetooth devices. When false, this device is not discoverable.",
            "params":{
                "type":"object",
                "properties":{
                    "timeout":{
                        "$ref": "#/definitions/timeout"
                    },
                    "discoverable":{
                        "$ref": "#/definitions/discoverable"
                    }
                },
                "required":[
                    "discoverable"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "setName":{
            "summary": "Sets the name of this device as seen by other Bluetooth devices.",
            "params":{
                "type":"object",
                "properties":{
                    "name":{
                        "summary": "Name of the Bluetooth Device",
                        "type": "string",
                        "example": "RDK Bluetooth Device"
                    }
                },
                "required":[
                    "name"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "startScan":{
            "summary": "Starts scanning for other Bluetooth devices that match the given profile. \n Supported profiles include:  \n* For Audio-Out: `LOUDSPEAKER`, `HEADPHONES`, `WEARABLE HEADSET`, `HIFI AUDIO DEVICE`  \n* For Audio-In: `SMARTPHONE`, `TABLET`  \n* For HID: `KEYBOARD`, `MOUSE`, `JOYSTICK`  \n* For HandsFree: `HandsFree`.  \n\n The method returns one of the following statuses:  \n* `AVAILABLE` - Bluetooth stack is initialized, not software disabled, and hardware is running  \n* `NO_BLUETOOTH_HARDWARE` - Bluetooth is supported in RDK software, but no Bluetooth hardware was found.\n* This method sends both `onStatusChanged` and `onDiscoveredDevice` events.",
            "events": {
                "onStatusChanged" : "Triggered onStatusChangedevent when device starts scanning the other available Bluetooth devices or when timeout (timeout param) is completed or the StopScan method called.",
                "onDiscoveredDevice" : "Triggered onDiscoveredDevice event when device is in scanning mode and at least one device is discovered or when the scanned device is lost."
            },
            "params":{
                "type":"object",
                "properties":{
                    "timeout":{
                        "$ref": "#/definitions/timeout"
                    },
                    "profile":{
                        "$ref": "#/definitions/profile"
                    }
                },
                "required":[
                    "timeout"
                ]
            },
            "result": {
                "type":"object",
                "properties": {
                    "status": {
                        "$ref": "#/definitions/status"
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "status",
                    "success"
                ]
            }
        },
        "stopScan":{
            "summary": "Stops scanning for Bluetooth devices  if already scan is in-progress and triggers `onStatusChanged` event.",
            "events":{
                "onStatusChanged" : "Triggered onStatusChanged event when scan is stopped."
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "unpair":{
            "summary": "Unpairs the given device ID from this device. Triggers `onStatusChanged` event.",
            "events": {
                "onStatusChanged" : "Triggers onStatusChanged event when device is unpaired."
            },
            "params": {
                "type":"object",
                "properties": {
                    "deviceID": {
                        "$ref": "#/definitions/deviceID"
                    }
                },
                "required": [
                    "deviceID"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "getDeviceVolumeMuteInfo":{
            "summary": "Gets the volume information of the given Bluetooth device ID.",
            "params": {
                "type":"object",
                "properties": {
                    "deviceID": {
                        "$ref": "#/definitions/deviceID"
                    },
                    "deviceProfile":{
                        "$ref": "#/definitions/deviceProfile"
                    }
                },
                "required": [
                    "deviceID",
                    "deviceProfile"
                ]
            },
            "result": {
                "type": "object",
                "properties": {
                    "volumeInfo": {
                        "summary":"An object which represents current device volume and mute information",
                        "type":"object",
                        "properties": {
                            "volume": {
                                "$ref": "#/definitions/volume"
                            },
                            "mute": {
                                "$ref": "#/definitions/mute"
                            }
                        },
                        "required":[
                            "volume",
                            "mute"
                        ]
                    },
                    "success":{
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "volumeInfo",
                    "success"
                ]
            }
        },
        "setDeviceVolumeMuteInfo": {
            "summary": "Sets the volume of the connected Bluetooth device ID.  Triggers `onDeviceMediaStatus` event.",
            "events": {
                "onDeviceMediaStatus" : "Triggers onDeviceMediaStatus event once volume of connected given deviceID is increased or decreased or when connected given deviceID is muted or unmuted or when unknown key is pressed on connected given deviceID."
            },
            "params": {
                "type":"object",
                "properties": {
                    "deviceID": {
                        "$ref": "#/definitions/deviceID"
                    },
                    "deviceProfile":{
                        "$ref": "#/definitions/deviceProfile"
                    },
                    "volume": {
                        "$ref": "#/definitions/volume"
                    },
                    "mute": {
                        "summary":"Mute value of the device is either 1 or 0",
                        "type": "string",
                        "example": "1"
                    }
                },
                "required": [
                    "deviceID",
                    "deviceProfile",
                    "volume",
                    "mute"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "getApiVersionNumber": {
            "summary": "Provides the current API version number.",
            "result": {
                "type":"object",
                "properties": {
                    "version":{
                        "$ref": "#/definitions/version"
                    },
                    "success":{
                        "$ref": "#/common/success"
                    }
                },
                "required":[
                    "version",
                    "success"
                ]
            }
        }
    },
    "events":{
        "onConnectionRequest": {
            "summary": "Triggered when a connection is requested by third party device that has already been paired to the set-top box.",
            "params": {
                "type":"object",
                "properties": {
                    "deviceID": {
                        "$ref": "#/definitions/deviceID"
                    },
                    "name": {
                        "$ref": "#/definitions/name"
                    },
                    "deviceType": {
                        "$ref": "#/definitions/deviceType"
                    },
                    "supportedProfile":{
                        "$ref": "#/definitions/supportedProfile"
                    },
                    "manufacturer": {
                        "$ref": "#/definitions/manufacturer"
                    },
                    "MAC": {
                        "$ref": "#/definitions/MAC"
                    }
                },
                "required": [
                    "deviceID",
                    "name",
                    "deviceType",
                    "supportedProfile",
                    "manufacturer",
                    "MAC"
                ]
            }
        },
        "onDiscoveredDevice": {
            "summary": "Triggered during device discovery when a new device is discovered or a discovered device has been lost in real time.",
            "params": {
                "type":"object",
                "properties": {
                    "deviceID": {
                        "$ref": "#/definitions/deviceID"
                    },
                    "discoveryType":{
                        "$ref": "#/definitions/discoveryType"
                    },
                    "name": {
                        "$ref": "#/definitions/name"
                    },
                    "deviceType": {
                        "$ref": "#/definitions/deviceType"
                    },
                    "rawDeviceType": {
                        "$ref": "#/definitions/rawDeviceType"
                    },
                    "rawBleDeviceType": {
                        "$ref": "#/definitions/rawBleDeviceType"
                    },
                    "lastConnectedState": {
                        "$ref": "#/definitions/lastConnectedState"
                    },
                    "paired": {
                        "summary": "Whether the device is paired. 1. `true` if the device is paired when the PAIRING_CHANGE status is sent 2. `false` if the device is unpaired. **Note** The set-top box does not retain/store all paired devices across previous power cycles. In addition, if the device is unpaired as part of a previous operation and the same device gets detected in a new discovery cycle, the device will not be a paired device.",
                        "type":"boolean",
                        "example": true
                    }
                },
                "required": [
                    "deviceID",
                    "discoveryType",
                    "name",
                    "deviceType",
                    "rawDeviceType",
                    "rawBleDeviceType",
                    "lastConnectedState",
                    "paired"
                ]
            }
        },
        "onPairingRequest": {
            "summary": "Triggered when pairing is requested by a third party device that supports A2DP profile. The set-top box must be enabled as an A2DP Sink device (is put in discoverable mode). \n \n **Note** : External pairing (process initiated by an external device) is not recommended for usage in the current edition, as it might lead to unexpected results. This warning will be removed when this scenario is fully supported.",
            "params": {
                "type":"object",
                "properties": {
                    "deviceID": {
                        "$ref": "#/definitions/deviceID"
                    },
                    "name": {
                        "$ref": "#/definitions/name"
                    },
                    "deviceType": {
                        "$ref": "#/definitions/deviceType"
                    },
                    "supportedProfile":{
                        "$ref": "#/definitions/supportedProfile"
                    },
                    "manufacturer": {
                        "$ref": "#/definitions/manufacturer"
                    },
                    "MAC": {
                        "$ref": "#/definitions/MAC"
                    },
                    "pinRequired": {
                        "$ref": "#/definitions/pinRequired"
                    },
                    "pinValue": {
                        "$ref": "#/definitions/pinValue"
                    }
                },
                "required": [
                    "deviceID",
                    "name",
                    "deviceType",
                    "supportedProfile",
                    "manufacturer",
                    "MAC",
                    "pinRequired",
                    "pinValue"
                ]
            }
        },
        "onPlaybackChange": {
            "summary": "Triggered when playback is interrupted or changed. Note that there is no resume event. After the previously paused playback is resumed, it is followed by `onPlaybackProgress` events.",
            "params": {
                "type":"object",
                "properties": {
                    "action":{
                        "$ref": "#/definitions/action"
                    },
                    "deviceID": {
                        "$ref": "#/definitions/deviceID"
                    },
                    "position":{
                        "$ref": "#/definitions/position"
                    },
                    "Duration":{
                        "$ref": "#/definitions/Duration"
                    }
                },
                "required": [
                    "action",
                    "deviceID",
                    "position",
                    "Duration"
                ]
            }
        },
        "onPlaybackNewTrack": {
            "summary": "Triggered whenever the user plays a new track or when the music player selects a next track automatically from its playlist.",
            "params":{
                "type":"object",
                "properties": {
                    "deviceID": {
                        "$ref": "#/definitions/deviceID"
                    },
                    "album": {
                        "$ref": "#/definitions/album"
                        },
                    "genre": {
                        "$ref": "#/definitions/genre" 
                    },
                    "title": {
                        "$ref": "#/definitions/title"
                    },
                    "artist": {
                        "$ref": "#/definitions/artist"
                    },
                    "ui32Duration": {
                        "$ref": "#/definitions/ui32Duration"
                    },
                    "ui32TrackNumber": {
                        "$ref": "#/definitions/ui32TrackNumber"
                    },
                    "ui32NumberOfTracks": {
                        "$ref": "#/definitions/ui32NumberOfTracks"
                    }
                },
                "required": [
                    "deviceID",
                    "album",
                    "genre",
                    "title",
                    "artist",
                    "ui32Duration",
                    "ui32TrackNumber",
                    "ui32NumberOfTracks"
                ]
            }
        },
        "onPlaybackProgress": {
            "summary": "Triggered in one second intervals as long as the status of the playback is playing.",
            "params": {
                "type":"object",
                "properties": {
                    "deviceID": {
                        "$ref": "#/definitions/deviceID"
                    },
                    "position":{
                        "$ref": "#/definitions/position"
                    },
                    "Duration":{
                        "$ref": "#/definitions/Duration"
                    }
                },
                "required": [
                    "deviceID",
                    "position",
                    "Duration"
                ]
            }
        },
        "onPlaybackRequest": {
            "summary": "Triggered when playback is requested by third party device that has already been paired to the set-top box.",
            "params": {
                "type":"object",
                "properties": {
                    "deviceID": {
                        "$ref": "#/definitions/deviceID"
                    },
                    "name": {
                        "$ref": "#/definitions/name"
                    },
                    "deviceType": {
                        "$ref": "#/definitions/deviceType"
                    },
                    "supportedProfile":{
                        "$ref": "#/definitions/supportedProfile"
                    },
                    "manufacturer": {
                        "$ref": "#/definitions/manufacturer"
                    },
                    "MAC": {
                        "$ref": "#/definitions/MAC"
                    }
                },
                "required": [
                    "deviceID",
                    "name",
                    "deviceType",
                    "supportedProfile",
                    "manufacturer",
                    "MAC"
                ]
            }
        },
        "onRequestFailed": {
            "summary": "Triggered when the previous request to pair or connect failed. In absence of a failure, XRE receives `statusChanged` when pairing or connecting succeeds.",
            "params": {
                "type":"object",
                "properties": {
                    "newStatus": {
                        "$ref": "#/definitions/newStatus"
                    },
                    "deviceID": {
                        "$ref": "#/definitions/deviceID"
                    },
                    "name": {
                        "$ref": "#/definitions/name"
                    },
                    "deviceType": {
                        "$ref": "#/definitions/deviceType"
                    },
                    "rawDeviceType": {
                        "$ref": "#/definitions/rawDeviceType"
                    },
                    "rawBleDeviceType": {
                        "$ref": "#/definitions/rawBleDeviceType"
                    },
                    "lastConnectedState": {
                        "$ref": "#/definitions/lastConnectedState"
                    },
                    "paired": {
                        "$ref": "#/definitions/paired"
                    },
                    "connected":{
                        "summary": "Whether the device is connected. `true` if the device is connected when the `CONNECTION_CHANGE` status is sent. `false` if the device is disconnected.",
                        "type":"boolean",
                        "example": "true"
                    }
                },
                "required": [
                    "newStatus",
                    "deviceID",
                    "name",
                    "deviceType",
                    "rawDeviceType",
                    "rawBleDeviceType",
                    "lastConnectedState",
                    "paired",
                    "connected"
                ]
            }
        },
        "onStatusChanged": {
            "summary": "Triggered when the Bluetooth functionality status changes. Supported statuses are:  \n* `PAIRING_CHANGE` - Pairing status changed. Applications get the device which got paired/unpaired as part of this message, but it's up to the application to obtain an updated list of paired devices by calling [getPairedDevices](#method.getpaireddevices).  \n* `CONNECTION_CHANGE` - one or more Bluetooth connections changed status. Applications get the device that got connected/disconnected as part of this message, but it's up to the application to obtain an updated list of connected devices by calling [getConnectedDevices](#method.getconnecteddevices).  \n* `DISCOVERY_COMPLETED` - Bluetooth device discovery is complete, at least one device is available. Applications should obtain an updated list of discovered devices by calling [getDiscoveredDevices](#method.getdiscovereddevices)  \n* `DISCOVERY_STARTED`- The Bluetooth device discovery will be triggered, after startScan method started.",
            "params": {
                "type":"object",
                "properties": {
                    "newStatus": {
                        "$ref": "#/definitions/newStatus"
                    },
                    "deviceID": {
                        "$ref": "#/definitions/deviceID"
                    },
                    "name": {
                        "$ref": "#/definitions/name"
                    },
                    "deviceType": {
                        "$ref": "#/definitions/deviceType"
                    },
                    "rawDeviceType": {
                        "$ref": "#/definitions/rawDeviceType"
                    },
                    "rawBleDeviceType": {
                        "$ref": "#/definitions/rawBleDeviceType"
                    },
                    "lastConnectedState": {
                        "$ref": "#/definitions/lastConnectedState"
                    },
                    "paired": {
                        "$ref": "#/definitions/paired"
                    },
                    "connected": {
                        "summary":"Whether device connected or not",
                        "type":"boolean",
                        "example":false
                    }
                },
                "required": [
                    "newStatus",
                    "deviceID",
                    "name",
                    "deviceType",
                    "rawDeviceType",
                    "rawBleDeviceType",
                    "lastConnectedState",
                    "paired",
                    "connected"
                ]
            }
        },
        "onDeviceFound": {
            "summary": "Triggered when the new device got discovered.",
            "params": {
                "type":"object",
                "properties": {
                    "deviceID": {
                        "$ref": "#/definitions/deviceID"
                    },
                    "name": {
                        "$ref": "#/definitions/name"
                    },
                    "deviceType": {
                        "$ref": "#/definitions/deviceType"
                    },
                    "rawDeviceType": {
                        "$ref": "#/definitions/rawDeviceType"
                    },
                    "rawBleDeviceType": {
                        "$ref": "#/definitions/rawBleDeviceType"
                    },
                    "lastConnectedState": {
                        "$ref": "#/definitions/lastConnectedState"
                    }
                },
                "required": [
                    "deviceID",
                    "name",
                    "deviceType",
                    "rawDeviceType",
                    "rawBleDeviceType",
                    "lastConnectedState"
                ]
            }
        },
        "onDeviceLost":{
            "summary": "Triggered when any discovered device lost or out of range.",
            "params": {
                "type":"object",
                "properties": {
                    "deviceID": {
                        "$ref": "#/definitions/deviceID"
                    },
                    "name": {
                        "$ref": "#/definitions/name"
                    },
                    "deviceType": {
                        "$ref": "#/definitions/deviceType"
                    },
                    "rawDeviceType": {
                        "$ref": "#/definitions/rawDeviceType"
                    },
                    "rawBleDeviceType": {
                        "$ref": "#/definitions/rawBleDeviceType"
                    },
                    "lastConnectedState": {
                        "$ref": "#/definitions/lastConnectedState"
                    }
                },
                "required": [
                    "deviceID",
                    "name",
                    "deviceType",
                    "rawDeviceType",
                    "rawBleDeviceType",
                    "lastConnectedState"
                ]
            }
        },
        "onDeviceMediaStatus":{
            "summary": "Triggered when any change occurs to Device Media like volume or mute. Supported Audio Media Control commands are:  \n* `MUTE` - BT audio device muted using remote or external BT device.  \n* `UNMUTE` - BT audio device unmuted using remote or external BT device.  \n* `VOLUME_UP` - BT audio device volume increased using remote or external BT device.  \n* `VOLUME_DOWN`- BT audio device volume decreased using remote or external BT device. \n* `CMD_UNKNOWN`- Unknown Media control other than MUTE, UNMUTE, VOLUME_UP, VOLUME_DOWN was performed on external BT device. ",
            "params": {
                "type":"object",
                "properties": {
                    "deviceID": {
                        "$ref": "#/definitions/deviceID"
                    },
                    "name": {
                        "$ref": "#/definitions/name"
                    },
                    "deviceType": {
                        "$ref": "#/definitions/deviceType"
                    },
                    "volume": {
                        "$ref": "#/definitions/volume"
                    },
                    "mute": {
                        "$ref": "#/definitions/mute"
                    },
                    "command": {
                        "$ref": "#/definitions/command"
                    }
                },
                "required": [
                    "deviceID",
                    "name",
                    "deviceType",
                    "volume",
                    "mute",
                    "command"
                ]
            }
        }
    }
}
