diff --git a/jsonrpc/DeviceInfo.json b/jsonrpc/DeviceInfo.json
index 9a1be64..4bf2604 100644
--- a/jsonrpc/DeviceInfo.json
+++ b/jsonrpc/DeviceInfo.json
@@ -529,6 +529,28 @@
         }
       ]
     },
+    "chipset": {
+      "summary": "Chipset used for this device",
+      "readonly": true,
+      "params": {
+        "type": "object",
+        "properties": {
+          "chipset": {
+            "type": "string",
+            "example": "T962X3"
+          }
+        },
+        "required": [
+          "chipset"
+        ]
+      },
+      "errors": [
+        {
+          "description": "General error",
+          "$ref": "#/common/errors/general"
+        }
+      ]
+    },
     "modelid": {
       "summary": "Device model number or SKU",
       "readonly": true,
diff --git a/interfaces/IDeviceIdentification.h b/interfaces/IDeviceIdentification.h
index e0bfaea..419759a 100644
--- a/interfaces/IDeviceIdentification.h
+++ b/interfaces/IDeviceIdentification.h
@@ -2,7 +2,7 @@
  * If not stated otherwise in this file or this component's LICENSE file the
  * following copyright and licenses apply:
  *
- * Copyright 2020 RDK Management
+ * Copyright 2024 Metrological
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -15,23 +15,35 @@
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- */
+*/
 
 #pragma once
 
 #include "Module.h"
 
 namespace WPEFramework {
+
 namespace Exchange {
 
-    struct EXTERNAL IDeviceProperties : virtual public Core::IUnknown {
-        enum { ID = ID_DEVICE_PROPERTIES };
+    // @json 1.0.0 @uncompliant:collapsed @text:legacy_lowercase 
+    struct EXTERNAL IDeviceIdentification : virtual public Core::IUnknown {
+
+        enum { ID = ID_DEVICEIDENTIFICATION };
+
+        struct DeviceInfo {
+            string deviceID /* @brief Device ID (e.g. WPEuCfrLF45) */;
+            string firmwareVersion /* @brief Version of the device firmware (e.g. 1.0.0) */;
+            string chipset /* @brief Chipset used for this device (e.g. BCM2711) */;
+        };
 
-        virtual ~IDeviceProperties() { }
+        // @property
+        // @text deviceidentification
+        // @brief Get device paltform specific information
+        // @retval ERROR_UNAVAILABLE Identification not availbale
+        virtual Core::hresult Identification(DeviceInfo& info /* @out */) const = 0;
 
-        virtual const string Chipset() const = 0;
-        virtual const string FirmwareVersion() const = 0;
     };
 
-}
+} // namespace Exchange
+
 }
diff --git a/interfaces/Ids.h b/interfaces/Ids.h
index 70ce61d..12db540 100644
--- a/interfaces/Ids.h
+++ b/interfaces/Ids.h
@@ -292,6 +292,7 @@ namespace Exchange {
         ID_SYSTEMAUDIOPLAYER                         = ID_BROWSER+ 0x530,
         ID_SYSTEMAUDIOPLAYER_NOTIFICATION            = ID_SYSTEMAUDIOPLAYER + 1,
 
+        ID_DEVICEIDENTIFICATION,
     };
 }
 }
