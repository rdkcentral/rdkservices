{
  "$schema": "https://raw.githubusercontent.com/rdkcentral/rdkservices/main/Tools/json_generator/schemas/interface.schema.json",
  "jsonrpc": "2.0",
  "info": {
    "title": "SharedStorage API",
    "class": "SharedStorage",
    "description": "SharedStorage JSON-RPC interface"
  },
  "common": {
    "$ref": "../common/common.json"
  },
  "definitions": {
    "namespace": {
      "summary": "Namespace",
      "type": "string",
      "example": "ns1"
    },
    "key": {
      "summary": "Key",
      "type": "string",
      "example": "key1"
    },
    "value": {
      "summary": "Value",
      "type": "string",
      "example": "value1"
    },
    "scope": {
      "summary": "Scope",
      "type": "string",
      "enum": [
        "device",
        "account"
      ],
      "default": "device",
      "example": "device"
    },
    "size": {
      "summary": "Size in bytes",
      "type": "number",
      "example": 100
    },
    "ttl": {
      "summary": "Time in seconds",
      "type": "number",
      "example": 100
    },
    "success": {
      "summary": "Legacy parameter (always true)",
      "type": "boolean",
      "default": true,
      "example": true
    }
  },
  "methods": {
    "deleteKey": {
      "summary": "Deletes a key from the specified namespace",
      "params": {
        "type": "object",
        "properties": {
          "namespace": {
            "$ref": "#/definitions/namespace"
          },
          "key": {
            "$ref": "#/definitions/key"
          },
          "scope": {
            "$ref": "#/definitions/scope"
          }
        },
        "required": [
          "namespace",
          "key"
        ]
      },
      "result": {
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/definitions/success"
          }
        },
        "required": [
          "success"
        ]
      },
      "errors": [
        {
          "description": "Unknown error",
          "$ref": "#/common/errors/general"
        }
      ]
    },
    "deleteNamespace": {
      "summary": "Deletes the specified namespace",
      "params": {
        "type": "object",
        "properties": {
          "namespace": {
            "$ref": "#/definitions/namespace"
          },
          "scope": {
            "$ref": "#/definitions/scope"
          }
        },
        "required": [
          "namespace"
        ]
      },
      "result": {
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/definitions/success"
          }
        },
        "required": [
          "success"
        ]
      },
      "errors": [
        {
          "description": "Unknown error",
          "$ref": "#/common/errors/general"
        }
      ]
    },
    "flushCache": {
      "summary": "Flushes the device cache",
      "result": {
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/definitions/success"
          }
        },
        "required": [
          "success"
        ]
      },
      "errors": [
        {
          "description": "Unknown error",
          "$ref": "#/common/errors/general"
        }
      ]
    },
    "getKeys": {
      "summary": "Returns the keys that are stored in the specified namespace",
      "params": {
        "type": "object",
        "properties": {
          "namespace": {
            "$ref": "#/definitions/namespace"
          },
          "scope": {
            "$ref": "#/definitions/scope"
          }
        },
        "required": [
          "namespace"
        ]
      },
      "result": {
        "type": "object",
        "properties": {
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/key"
            }
          },
          "success": {
            "$ref": "#/definitions/success"
          }
        },
        "required": [
          "keys",
          "success"
        ]
      },
      "errors": [
        {
          "description": "Unknown error",
          "$ref": "#/common/errors/general"
        }
      ]
    },
    "getNamespaces": {
      "summary": "Returns the namespaces",
      "params": {
        "type": "object",
        "properties": {
          "scope": {
            "$ref": "#/definitions/scope"
          }
        },
        "required": []
      },
      "result": {
        "type": "object",
        "properties": {
          "namespaces": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/namespace"
            }
          },
          "success": {
            "$ref": "#/definitions/success"
          }
        },
        "required": [
          "namespaces",
          "success"
        ]
      },
      "errors": [
        {
          "description": "Unknown error",
          "$ref": "#/common/errors/general"
        }
      ]
    },
    "getStorageSizes": {
      "summary": "Returns the size occupied by each namespace",
      "params": {
        "type": "object",
        "properties": {
          "scope": {
            "$ref": "#/definitions/scope"
          }
        },
        "required": []
      },
      "result": {
        "type": "object",
        "properties": {
          "storageList": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "namespace": {
                  "$ref": "#/definitions/namespace"
                },
                "size": {
                  "$ref": "#/definitions/size"
                }
              },
              "required": [
                "namespace",
                "size"
              ]
            }
          }
        },
        "required": [
          "storageList"
        ]
      },
      "errors": [
        {
          "description": "Unknown error",
          "$ref": "#/common/errors/general"
        }
      ]
    },
    "getValue": {
      "summary": "Returns the value of a key from the specified namespace",
      "params": {
        "type": "object",
        "properties": {
          "namespace": {
            "$ref": "#/definitions/namespace"
          },
          "key": {
            "$ref": "#/definitions/key"
          },
          "scope": {
            "$ref": "#/definitions/scope"
          }
        },
        "required": [
          "namespace",
          "key"
        ]
      },
      "result": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/definitions/value"
          },
          "success": {
            "$ref": "#/definitions/success"
          },
          "ttl": {
            "$ref": "#/definitions/ttl"
          }
        },
        "required": [
          "value",
          "success"
        ]
      },
      "errors": [
        {
          "description": "Time is not synced",
          "$ref": "#/common/errors/pendingconditions"
        },
        {
          "description": "Unknown namespace",
          "$ref": "#/common/errors/notexist"
        },
        {
          "description": "Unknown key",
          "$ref": "#/common/errors/unknownkey"
        },
        {
          "description": "Unknown error",
          "$ref": "#/common/errors/general"
        }
      ]
    },
    "setValue": {
      "summary": "Sets the value of a key in the the specified namespace",
      "params": {
        "type": "object",
        "properties": {
          "namespace": {
            "$ref": "#/definitions/namespace"
          },
          "key": {
            "$ref": "#/definitions/key"
          },
          "value": {
            "$ref": "#/definitions/value"
          },
          "scope": {
            "$ref": "#/definitions/scope"
          },
          "ttl": {
            "$ref": "#/definitions/ttl"
          }
        },
        "required": [
          "namespace",
          "key",
          "value"
        ]
      },
      "result": {
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/definitions/success"
          }
        },
        "required": [
          "success"
        ]
      },
      "errors": [
        {
          "description": "Time is not synced",
          "$ref": "#/common/errors/pendingconditions"
        },
        {
          "description": "Empty/too large namespace or key, or the storage doesn't have enough space",
          "$ref": "#/common/errors/invalidinputlength"
        },
        {
          "description": "Unknown error",
          "$ref": "#/common/errors/general"
        }
      ]
    },
    "setNamespaceStorageLimit": {
      "summary": "Sets the storage limit for a given namespace",
      "params": {
        "type": "object",
        "properties": {
          "namespace": {
            "$ref": "#/definitions/namespace"
          },
          "storageLimit": {
            "$ref": "#/definitions/size"
          },
          "scope": {
            "$ref": "#/definitions/scope"
          }
        },
        "required": [
          "namespace",
          "storageLimit"
        ]
      },
      "result": {
        "$ref": "#/common/results/void"
      },
      "errors": [
        {
          "description": "Empty/too large namespace, or the storage doesn't have enough space",
          "$ref": "#/common/errors/invalidinputlength"
        },
        {
          "description": "Unknown error",
          "$ref": "#/common/errors/general"
        }
      ]
    },
    "getNamespaceStorageLimit": {
      "summary": "Returns the storage limit for a given namespace",
      "params": {
        "type": "object",
        "properties": {
          "namespace": {
            "$ref": "#/definitions/namespace"
          },
          "scope": {
            "$ref": "#/definitions/scope"
          }
        },
        "required": [
          "namespace"
        ]
      },
      "result": {
        "type": "object",
        "properties": {
          "storageLimit": {
            "$ref": "#/definitions/size"
          }
        },
        "required": [
          "storageLimit"
        ]
      },
      "errors": [
        {
          "description": "Unknown namespace",
          "$ref": "#/common/errors/notexist"
        },
        {
          "description": "Unknown error",
          "$ref": "#/common/errors/general"
        }
      ]
    }
  },
  "events": {
    "onValueChanged": {
      "summary": "Triggered whenever any of the values stored are changed using setValue",
      "params": {
        "type": "object",
        "properties": {
          "namespace": {
            "$ref": "#/definitions/namespace"
          },
          "key": {
            "$ref": "#/definitions/key"
          },
          "value": {
            "$ref": "#/definitions/value"
          },
          "scope": {
            "$ref": "#/definitions/scope"
          }
        },
        "required": [
          "namespace",
          "key",
          "value",
          "scope"
        ]
      }
    }
  }
}