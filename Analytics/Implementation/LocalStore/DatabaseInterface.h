/**
 * If not stated otherwise in this file or this component's LICENSE
 * file the following copyright and licenses apply:
 *
 * Copyright 2020 RDK Management
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 **/
#pragma once

#include "sqlite3.h"

//=============================================================================
//                        Custom Definitions
#define SQL_MASTER_TABLE_NAME_COL_ID (1)

//=============================================================================
//                        Database Definitions
#define DB_OK SQLITE_OK
#define DB_ERROR SQLITE_ERROR

#define DB_ROW_READY SQLITE_ROW

#define DB_COL_TYPE_INTEGER SQLITE_INTEGER
#define DB_COL_TYPE_FLOAT SQLITE_FLOAT
#define DB_COL_TYPE_TEXT SQLITE3_TEXT
#define DB_COL_TYPE_BLOB SQLITE_BLOB
#define DB_COL_TYPE_NULL SQLITE_NULL

//=============================================================================
//                           Database Types
#define DB_HANDLE sqlite3
#define DB_STATEMENT sqlite3_stmt

//=============================================================================
//                            Database APIs
//Get last error generated by the database
#define DB_ERRMSG(handle) sqlite3_errmsg(handle)

//Open a new/existing database
#define DB_OPEN(name, handle) sqlite3_open(name, handle)

//Close a currently open database
#define DB_CLOSE(handle) sqlite3_close(handle)

//Free memory created internally by the database
#define DB_FREE(ptr) sqlite3_free(ptr)

//Query database handling 1 row at a time
#define DB_STEP_ROW(smt) sqlite3_step(smt)

//Number of columns in the database
#define DB_COLUMN_COUNT(smt) sqlite3_column_count(smt)

//Column name
#define DB_COLUMN_NAME(smt, colIdx) sqlite3_column_name(smt, colIdx)

//Column Datatype
#define DB_COLUMN_TYPE(smt, colIdx) sqlite3_column_type(smt, colIdx)

//Perform a database query based on a query string
#define DB_QUERY(handle, query, cb, cbdata, errmsg)                            \
  sqlite3_exec(handle, query, cb, cbdata, errmsg)

//Check how many rows were affected on the last query
#define DB_CHANGES(handle) sqlite3_changes(handle)
