set(autostart ${PLUGIN_JSPP_AUTOSTART})

set(preconditions Graphics)

if(PLUGIN_JSPP_STARTUPORDER)
set (startuporder ${PLUGIN_JSPP_STARTUPORDER})
endif()

if(PLUGIN_JSPP_PERSISTENTPATHPOSTFIX)
  set(persistentpathpostfix ${PLUGIN_JSPP_PERSISTENTPATHPOSTFIX})
endif()

map()
    kv(mode ${PLUGIN_JSPP_MODE})
    kv(locator lib${PLUGIN_WEBKITBROWSER_IMPLEMENTATION}.so)
    if(PLUGIN_WEBKITBROWSER_USER)
        kv(user ${PLUGIN_WEBKITBROWSER_USER})
    endif()
    if(PLUGIN_WEBKITBROWSER_GROUP)
        kv(group ${PLUGIN_WEBKITBROWSER_GROUP})
    endif()
end()
ans(rootobject)

map()
    kv(url ${PLUGIN_JSPP_STARTURL})
    if(PLUGIN_JSPP_USERAGENT)
        semicolon_safe_string(PLUGIN_JSPP_USERAGENT)
        kv(useragent ${PLUGIN_JSPP_USERAGENT})
    endif()
    kv(extensiondir ${PLUGIN_WEBKITBROWSER_EXTENSION_DIRECTORY})
    kv(transparent ${PLUGIN_WEBKITBROWSER_TRANSPARENT})
    kv(compositor "noaa")
    kv(inspector ${PLUGIN_JSPP_WEBINSPECTOR_ADDRESS})
    kv(fps true)
    kv(cursor false)
    kv(touch false)
    kv(msebuffers ${PLUGIN_WEBKITBROWSER_MSEBUFFERS})
    kv(memoryprofile ${PLUGIN_WEBKITBROWSER_MEMORYPROFILE})
    kv(memorypressure ${PLUGIN_JSPP_MEMORYPRESSURE})
    kv(mediadiskcache ${PLUGIN_WEBKITBROWSER_MEDIADISKCACHE})
    kv(diskcache ${PLUGIN_JSPP_DISKCACHE})
    kv(xhrcache ${PLUGIN_WEBKITBROWSER_XHRCACHE})
    kv(webgl ${PLUGIN_WEBKITBROWSER_WEBGL})
    kv(threadedpainting ${PLUGIN_WEBKITBROWSER_THREADEDPAINTING})
    if(PLUGIN_JSPP_DISKCACHEDIR)
      kv(diskcachedir ${PLUGIN_JSPP_DISKCACHEDIR})
    endif()
    if(PLUGIN_WEBKITBROWSER_HEIGHT)
        kv(height ${PLUGIN_WEBKITBROWSER_HEIGHT})
    endif()
    if(PLUGIN_WEBKITBROWSER_WIDTH)
        kv(width ${PLUGIN_WEBKITBROWSER_WIDTH})
    endif()
    if(PLUGIN_JSPP_CLIENTIDENTIFIER)
        kv(clientidentifier ${PLUGIN_JSPP_CLIENTIDENTIFIER})
    endif()
    kv(localstorageenabled ${PLUGIN_JSPP_LOCALSTORAGE_ENABLE})

    if(PLUGIN_JSPP_LOCALSTORAGE)
        kv(localstorage ${PLUGIN_JSPP_LOCALSTORAGE})
    endif()
    if(PLUGIN_JSPP_LOCALSTORAGESIZE)
        kv(localstoragesize ${PLUGIN_JSPP_LOCALSTORAGESIZE})
    endif()
    if(PLUGIN_JSPP_COOKIESTORAGE)
        kv(cookiestorage ${PLUGIN_JSPP_COOKIESTORAGE})
    endif()
    if(PLUGIN_JSPP_WINDOWCLOSE)
        kv(windowclose ${PLUGIN_JSPP_WINDOWCLOSE})
    endif()
    if(PLUGIN_WEBKITBROWSER_CLIENT_CERT AND PLUGIN_WEBKITBROWSER_CLIENT_CERT_KEY)
        kv(clientcert ${PLUGIN_WEBKITBROWSER_CLIENT_CERT})
        kv(clientcertkey ${PLUGIN_WEBKITBROWSER_CLIENT_CERT_KEY})
    endif()
    if(PLUGIN_JSPP_LOGTOSYSTEMCONSOLE)
        kv(logtosystemconsoleenabled ${PLUGIN_JSPP_LOGTOSYSTEMCONSOLE})
    endif()
    if(DEFINED PLUGIN_JSPP_SECURE)
        kv(secure ${PLUGIN_JSPP_SECURE})
    endif()
    kv(watchdogchecktimeoutinseconds 10)
    kv(watchdoghangthresholdtinseconds 60)
    kv(loadblankpageonsuspendenabled false)

    key(environmentvariables)
        map()
            kv(name "AAMP_ENABLE_OPT_OVERRIDE")
            kv(value "TRUE")
        end()
        map()
            kv(name "AAMP_ENABLE_WESTEROS_SINK")
            kv(value 1)
        end()
        map()
            kv(name "ENABLE_FOG_OPT_OVERRIDE")
            kv(value 1)
        end()
        map()
            kv(name "WESTEROS_SINK_VIRTUAL_HEIGHT")
            kv(value 1080)
        end()
        map()
            kv(name "WESTEROS_SINK_VIRTUAL_WIDTH")
            kv(value 1920)
        end()
        map()
            kv(name "GST_HWAVSYNC")
            kv(value 0)
        end()
        map()
            kv(name "GST_PLAYERSINKBIN_DELAY")
            kv(value 800000000)
        end()
        map()
            kv(name "GST_REGISTRY_FORK")
            kv(value "no")
        end()
        map()
            kv(name "XDG_DATA_HOME")
            kv(value "/opt/QT/home")
        end()
        map()
            kv(name "PROCESS_NAME")
            kv(value "JSPPWebProcess")
        end()

    kv(loggingtarget "sky-jspp.service")
end()
ans(configuration)

map_append(${configuration} root ${rootobject})

map()
if(PLUGIN_JSPP_MEMORYPRESSURE_WEBPROCESS_SETTINGS_LIMIT OR (PLUGIN_JSPP_MEMORYPRESSURE_WEBPROCESS_SETTINGS_GPU_LIMIT AND PLUGIN_JSPP_MEMORYPRESSURE_WEBPROCESS_SETTINGS_GPU_FILE) OR PLUGIN_JSPP_MEMORYPRESSURE_WEBPROCESS_SETTINGS_POLLINTERVAL)
    key(webprocesssettings)
    map()
if(PLUGIN_JSPP_MEMORYPRESSURE_WEBPROCESS_SETTINGS_LIMIT)
        kv(limit ${PLUGIN_JSPP_MEMORYPRESSURE_WEBPROCESS_SETTINGS_LIMIT})
endif()
if(PLUGIN_JSPP_MEMORYPRESSURE_WEBPROCESS_SETTINGS_GPU_LIMIT AND PLUGIN_JSPP_MEMORYPRESSURE_WEBPROCESS_SETTINGS_GPU_FILE)
        kv(gpulimit ${PLUGIN_JSPP_MEMORYPRESSURE_WEBPROCESS_SETTINGS_GPU_LIMIT})
        kv(gpufile ${PLUGIN_JSPP_MEMORYPRESSURE_WEBPROCESS_SETTINGS_GPU_FILE})
endif()
if(PLUGIN_JSPP_MEMORYPRESSURE_WEBPROCESS_SETTINGS_POLLINTERVAL)
        kv(pollinterval ${PLUGIN_JSPP_MEMORYPRESSURE_WEBPROCESS_SETTINGS_POLLINTERVAL})
endif()
    end()
endif()

if(PLUGIN_JSPP_MEMORYPRESSURE_NETWORKPROCESS_SETTINGS_LIMIT OR PLUGIN_JSPP_MEMORYPRESSURE_NETWORKPROCESS_SETTINGS_POLLINTERVAL)
    key(networkprocesssettings)
    map()
if(PLUGIN_JSPP_MEMORYPRESSURE_NETWORKPROCESS_SETTINGS_LIMIT)
        kv(limit ${PLUGIN_JSPP_MEMORYPRESSURE_NETWORKPROCESS_SETTINGS_LIMIT})
endif()
if(PLUGIN_JSPP_MEMORYPRESSURE_NETWORKPROCESS_SETTINGS_POLLINTERVAL)
        kv(pollinterval ${PLUGIN_JSPP_MEMORYPRESSURE_NETWORKPROCESS_SETTINGS_POLLINTERVAL})
endif()
    end()
endif()
end()
ans(memory)

map_append(${configuration} memory ${memory})

